<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【CSS】伪类清除浮动]]></title>
    <url>%2F2019%2F05%2F10%2F%E3%80%90CSS%E3%80%91%E4%BC%AA%E7%B1%BB%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[123456clearfix:after&#123; display:block; content: &quot;&quot;; clear: both; height:0;&#125; 如果你的网站只需要兼容webkit、firefox、opera等浏览器，建议对于伪元素采用双冒号的写法，如果不得不兼容IE浏览器，还是用CSS2的单冒号写法比较安全。]]></content>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【建站】端口号介绍]]></title>
    <url>%2F2019%2F05%2F09%2F%E3%80%90%E5%BB%BA%E7%AB%99%E3%80%91%E7%AB%AF%E5%8F%A3%E5%8F%B7%E4%BB%8B%E7%BB%8D%2F</url>
    <content type="text"><![CDATA[常用端口号： 代理服务器常用以下端口： （1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080 （2）. SOCKS代理协议服务器常用端口号：1080 （3）. FTP（文件传输）协议代理服务器常用端口号：21 （4）. Telnet（远程登录）协议代理服务器常用端口：23 （5）. HTTP服务器，默认的端口号为80/tcp（木马Executor开放此端口）； （6）. HTTPS（securely transferring web pages）服务器，默认的端口号为443/tcp 443/udp； （7）. Telnet（不安全的文本传送），默认端口号为23/tcp（木马Tiny Telnet Server所开放的端口）； （8）. FTP，默认的端口号为21/tcp（木马Doly Trojan、Fore、Invisible FTP、WebEx、WinCrash和Blade Runner所开放的端口）； （9）. TFTP（Trivial File Transfer Protocol ），默认的端口号为69/udp； （10）. SSH（安全登录）、SCP（文件传输）、端口重定向，默认的端口号为22/tcp； （11）. SMTP Simple Mail Transfer Protocol (E-mail)，默认的端口号为25/tcp（木马Antigen、Email Password Sender、Haebu Coceda、Shtrilitz Stealth、WinPC、WinSpy都开放这个端口）； （12）. POP3 Post Office Protocol (E-mail) ，默认的端口号为110/tcp； （13）. WebLogic，默认的端口号为7001； （14）. WebSphere应用程序，默认的端口号为9080； （15）. WebSphere管理工具，默认的端口号为9090； （16）. JBOSS，默认的端口号为8080； （17）. TOMCAT，默认的端口号为8080； （18）. WIN2003远程登陆，默认的端口号为3389； （19）. Symantec AV/Filter for MSE ,默认端口号为 8081； （20）. Oracle 数据库，默认的端口号为1521； （21）. ORACLE EMCTL，默认的端口号为1158； （22）. Oracle XDB（ XML 数据库），默认的端口号为8080； （23）. Oracle XDB FTP服务，默认的端口号为2100； （24）. MS SQL*SERVER数据库server，默认的端口号为1433/tcp 1433/udp； （25）. MS SQL*SERVER数据库monitor，默认的端口号为1434/tcp 1434/udp； （26）. QQ，默认的端口号为1080/udp]]></content>
  </entry>
  <entry>
    <title><![CDATA[【VUE】模仿去哪儿app源码]]></title>
    <url>%2F2019%2F05%2F08%2F%E3%80%90VUE%E3%80%91%E6%A8%A1%E4%BB%BF%E5%8E%BB%E5%93%AA%E5%84%BFapp%E6%BA%90%E7%A0%81%2F</url>
    <content type="text"><![CDATA[使用Vue CLI构建 下载地址：https://github.com/lgengbo/whereapp 12345678下载后进行依赖安装npm install启动npm run dev打包npm run build 实现效果]]></content>
  </entry>
  <entry>
    <title><![CDATA[【JS】日期时间格式化]]></title>
    <url>%2F2019%2F05%2F08%2F%E3%80%90JS%E3%80%91%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96%2F</url>
    <content type="text"><![CDATA[时间格式化yyyy-MM-dd HH:mm:ss 与 yyyy-MM-dd获取当前时间函数 123function mounthShort() &#123; return new Date();&#125;; 时间格式化函数 123456789101112131415161718192021function dateFormate(dateTime, timeflag) &#123; const date = new Date(Date.parse(dateTime)); const y = date.getFullYear(); let m = date.getMonth() + 1; m = m &lt; 10 ? (`0$&#123;m&#125;`) : m; let d = date.getDate(); d = d &lt; 10 ? (`0$&#123;d&#125;`) : d; let h = date.getHours(); h = h &lt; 10 ? (`0$&#123;h&#125;`) : h; let minute = date.getMinutes(); minute = minute &lt; 10 ? (`0$&#123;minute&#125;`) : minute; let seconds = date.getSeconds(); seconds = seconds &lt; 10 ? (`0$&#123;seconds&#125;`) : seconds; let result = &apos;&apos;; if (timeflag) &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;h&#125;:$&#123;minute&#125;:$&#123;seconds&#125;`; &#125; else &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`; &#125; return result; &#125;; 调用并格式化 12345var time = mounthShort(); // 返回的值 Wed May 08 2019 09:46:57 GMT+0800 (中国标准时间)var timeFormat = dateFormate(time,true); // 格式 yyyy-MM-dd HH:mm:ssvar timeFormats = dateFormate(time,false); // 格式 yyyy-MM-ddconsole.log(timeFormat); // 2019-05-08 09:46:57console.log(timeFormats); // 2019-05-08 完整代码 12345678910111213141516171819202122232425262728293031function mounthShort() &#123; return new Date();&#125;;function dateFormate(dateTime, timeflag) &#123; const date = new Date(Date.parse(dateTime)); const y = date.getFullYear(); let m = date.getMonth() + 1; m = m &lt; 10 ? (`0$&#123;m&#125;`) : m; let d = date.getDate(); d = d &lt; 10 ? (`0$&#123;d&#125;`) : d; let h = date.getHours(); h = h &lt; 10 ? (`0$&#123;h&#125;`) : h; let minute = date.getMinutes(); minute = minute &lt; 10 ? (`0$&#123;minute&#125;`) : minute; let seconds = date.getSeconds(); seconds = seconds &lt; 10 ? (`0$&#123;seconds&#125;`) : seconds; let result = &apos;&apos;; if (timeflag) &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;h&#125;:$&#123;minute&#125;:$&#123;seconds&#125;`; &#125; else &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`; &#125; return result; &#125;;var time = mounthShort(); // 返回的值 Wed May 08 2019 09:46:57 GMT+0800 (中国标准时间)var timeFormat = dateFormate(time,true); // 格式 yyyy-MM-dd HH:mm:ssvar timeFormats = dateFormate(time,false); // 格式 yyyy-MM-ddconsole.log(timeFormat); // 2019-05-08 09:46:57console.log(timeFormats); // 2019-05-08]]></content>
  </entry>
  <entry>
    <title><![CDATA[【JS】时间格式化]]></title>
    <url>%2F2019%2F05%2F08%2F%E3%80%90JS%E3%80%91%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96%2F</url>
    <content type="text"><![CDATA[时间格式化yyyy-MM-dd HH:mm:ss 与 yyyy-MM-dd获取当前时间函数 123function mounthShort() &#123; return new Date();&#125;; 时间格式化函数 123456789101112131415161718192021function dateFormate(dateTime, timeflag) &#123; const date = new Date(Date.parse(dateTime)); const y = date.getFullYear(); let m = date.getMonth() + 1; m = m &lt; 10 ? (`0$&#123;m&#125;`) : m; let d = date.getDate(); d = d &lt; 10 ? (`0$&#123;d&#125;`) : d; let h = date.getHours(); h = h &lt; 10 ? (`0$&#123;h&#125;`) : h; let minute = date.getMinutes(); minute = minute &lt; 10 ? (`0$&#123;minute&#125;`) : minute; let seconds = date.getSeconds(); seconds = seconds &lt; 10 ? (`0$&#123;seconds&#125;`) : seconds; let result = &apos;&apos;; if (timeflag) &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;h&#125;:$&#123;minute&#125;:$&#123;seconds&#125;`; &#125; else &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`; &#125; return result; &#125;; 调用并格式化 12345var time = mounthShort(); // 返回的值 Wed May 08 2019 09:46:57 GMT+0800 (中国标准时间)var timeFormat = dateFormate(time,true); // 格式 yyyy-MM-dd HH:mm:ssvar timeFormats = dateFormate(time,false); // 格式 yyyy-MM-ddconsole.log(timeFormat); // 2019-05-08 09:46:57console.log(timeFormats); // 2019-05-08 完整代码 12345678910111213141516171819202122232425262728293031function mounthShort() &#123; return new Date();&#125;;function dateFormate(dateTime, timeflag) &#123; const date = new Date(Date.parse(dateTime)); const y = date.getFullYear(); let m = date.getMonth() + 1; m = m &lt; 10 ? (`0$&#123;m&#125;`) : m; let d = date.getDate(); d = d &lt; 10 ? (`0$&#123;d&#125;`) : d; let h = date.getHours(); h = h &lt; 10 ? (`0$&#123;h&#125;`) : h; let minute = date.getMinutes(); minute = minute &lt; 10 ? (`0$&#123;minute&#125;`) : minute; let seconds = date.getSeconds(); seconds = seconds &lt; 10 ? (`0$&#123;seconds&#125;`) : seconds; let result = &apos;&apos;; if (timeflag) &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125; $&#123;h&#125;:$&#123;minute&#125;:$&#123;seconds&#125;`; &#125; else &#123; result = `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`; &#125; return result; &#125;;var time = mounthShort(); // 返回的值 Wed May 08 2019 09:46:57 GMT+0800 (中国标准时间)var timeFormat = dateFormate(time,true); // 格式 yyyy-MM-dd HH:mm:ssvar timeFormats = dateFormate(time,false); // 格式 yyyy-MM-ddconsole.log(timeFormat); // 2019-05-08 09:46:57console.log(timeFormats); // 2019-05-08]]></content>
  </entry>
  <entry>
    <title><![CDATA[【HTML】Html引用公用的JS、CSS文件]]></title>
    <url>%2F2019%2F05%2F07%2F%E3%80%90HTML%E3%80%91Html%E5%BC%95%E7%94%A8%E5%85%AC%E7%94%A8%E7%9A%84JS%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[在实际过程中，尝尝会遇到一大堆外部的js和css文件，有经验的人会将其分类，分门别类的引入各页面中，但是相对于初学者或者没有良好的代码规范的人会时常将其弄的乱七八糟，比如这样 123&lt;script src=&quot;js/test1.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/test2.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;js/test3.js&quot;&gt;&lt;/script&gt; 如何让一些常用的js封装成只引入一个js文件呢，其实很简单，新建一个commonJs.js文件，然后在里面引入公共的外部js文件 123document.write(&apos;&lt;script src=&quot;js/test1.js&quot;&gt;&lt;/script&gt;&apos;);document.write(&apos;&lt;script src=&quot;js/test2.js&quot;&gt;&lt;/script&gt;&apos;);document.write(&apos;&lt;script src=&quot;js/test3.js&quot;&gt;&lt;/script&gt;&apos;); 这样咱们就算是提取出了公共的外部文件，然后再在每个页面引入这这个js文件即可 1&lt;script src=&quot;js/commonJs.js&quot;&gt;&lt;/script&gt; 那么有人会问了，居然js可以做到，那么css文件呢。其实也是可以的。一样新建一个commonCss.js文件，然后在里面引入公共的外部css文件 123document.write(&apos;&lt;script src=&quot;css/test1.css&quot;&gt;&lt;/script&gt;&apos;);document.write(&apos;&lt;script src=&quot;css/test2.css&quot;&gt;&lt;/script&gt;&apos;);document.write(&apos;&lt;script src=&quot;css/test3.css&quot;&gt;&lt;/script&gt;&apos;); 这样咱们就算是提取出了公共的外部文件，然后再在每个页面引入这这个js文件即可 1&lt;script src=&quot;css/commonCss.js&quot;&gt;&lt;/script&gt;]]></content>
  </entry>
  <entry>
    <title><![CDATA[【HTML】html input file accept上传文件限制文件类型]]></title>
    <url>%2F2019%2F05%2F06%2F%E3%80%90HTML%E3%80%91html-input-file-accept-%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E9%99%90%E5%88%B6%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[html input file accept,上传文件限制文件类型在上传文件的时候，需要限制指定的文件类型。 1&lt;input type=&quot;file&quot; accept=&quot;image/*&quot; /&gt; accept表示可以上传文件类型，image表示图片，*表示所有支持的格式。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191application/envoy evyapplication/fractals fifapplication/futuresplash splapplication/hta htaapplication/internet-property-stream acxapplication/mac-binhex40 hqxapplication/msword docapplication/msword dotapplication/octet-stream *application/octet-stream binapplication/octet-stream classapplication/octet-stream dmsapplication/octet-stream exeapplication/octet-stream lhaapplication/octet-stream lzhapplication/oda odaapplication/olescript axsapplication/pdf pdfapplication/pics-rules prfapplication/pkcs10 p10application/pkix-crl crlapplication/postscript aiapplication/postscript epsapplication/postscript psapplication/rtf rtfapplication/set-payment-initiation setpayapplication/set-registration-initiation setregapplication/vnd.ms-excel xlaapplication/vnd.ms-excel xlcapplication/vnd.ms-excel xlmapplication/vnd.ms-excel xlsapplication/vnd.ms-excel xltapplication/vnd.ms-excel xlwapplication/vnd.ms-outlook msgapplication/vnd.ms-pkicertstore sstapplication/vnd.ms-pkiseccat catapplication/vnd.ms-pkistl stlapplication/vnd.ms-powerpoint potapplication/vnd.ms-powerpoint ppsapplication/vnd.ms-powerpoint pptapplication/vnd.ms-project mppapplication/vnd.ms-works wcmapplication/vnd.ms-works wdbapplication/vnd.ms-works wksapplication/vnd.ms-works wpsapplication/winhlp hlpapplication/x-bcpio bcpioapplication/x-cdf cdfapplication/x-compress zapplication/x-compressed tgzapplication/x-cpio cpioapplication/x-csh cshapplication/x-director dcrapplication/x-director dirapplication/x-director dxrapplication/x-dvi dviapplication/x-gtar gtarapplication/x-gzip gzapplication/x-hdf hdfapplication/x-internet-signup insapplication/x-internet-signup ispapplication/x-iphone iiiapplication/x-javascript jsapplication/x-latex latexapplication/x-msaccess mdbapplication/x-mscardfile crdapplication/x-msclip clpapplication/x-msdownload dllapplication/x-msmediaview m13application/x-msmediaview m14application/x-msmediaview mvbapplication/x-msmetafile wmfapplication/x-msmoney mnyapplication/x-mspublisher pubapplication/x-msschedule scdapplication/x-msterminal trmapplication/x-mswrite wriapplication/x-netcdf cdfapplication/x-netcdf ncapplication/x-perfmon pmaapplication/x-perfmon pmcapplication/x-perfmon pmlapplication/x-perfmon pmrapplication/x-perfmon pmwapplication/x-pkcs12 p12application/x-pkcs12 pfxapplication/x-pkcs7-certificates p7bapplication/x-pkcs7-certificates spcapplication/x-pkcs7-certreqresp p7rapplication/x-pkcs7-mime p7capplication/x-pkcs7-mime p7mapplication/x-pkcs7-signature p7sapplication/x-sh shapplication/x-shar sharapplication/x-shockwave-flash swfapplication/x-stuffit sitapplication/x-sv4cpio sv4cpioapplication/x-sv4crc sv4crcapplication/x-tar tarapplication/x-tcl tclapplication/x-tex texapplication/x-texinfo texiapplication/x-texinfo texinfoapplication/x-troff roffapplication/x-troff tapplication/x-troff trapplication/x-troff-man manapplication/x-troff-me meapplication/x-troff-ms msapplication/x-ustar ustarapplication/x-wais-source srcapplication/x-x509-ca-cert cerapplication/x-x509-ca-cert crtapplication/x-x509-ca-cert derapplication/ynd.ms-pkipko pkoapplication/zip zipaudio/basic auaudio/basic sndaudio/mid midaudio/mid rmiaudio/mpeg mp3audio/x-aiff aifaudio/x-aiff aifcaudio/x-aiff aiffaudio/x-mpegurl m3uaudio/x-pn-realaudio raaudio/x-pn-realaudio ramaudio/x-wav wavimage/bmp bmpimage/cis-cod codimage/gif gifimage/ief iefimage/jpeg jpeimage/jpeg jpegimage/jpeg jpgimage/pipeg jfifimage/svg+xml svgimage/tiff tifimage/tiff tiffimage/x-cmu-raster rasimage/x-cmx cmximage/x-icon icoimage/x-portable-anymap pnmimage/x-portable-bitmap pbmimage/x-portable-graymap pgmimage/x-portable-pixmap ppmimage/x-rgb rgbimage/x-xbitmap xbmimage/x-xpixmap xpmimage/x-xwindowdump xwdmessage/rfc822 mhtmessage/rfc822 mhtmlmessage/rfc822 nwstext/css csstext/h323 323text/html htmtext/html htmltext/html stmtext/iuls ulstext/plain bastext/plain ctext/plain htext/plain txttext/richtext rtxtext/scriptlet scttext/tab-separated-values tsvtext/webviewhtml htttext/x-component htctext/x-setext etxtext/x-vcard vcfvideo/mpeg mp2video/mpeg mpavideo/mpeg mpevideo/mpeg mpegvideo/mpeg mpgvideo/mpeg mpv2video/quicktime movvideo/quicktime qtvideo/x-la-asf lsfvideo/x-la-asf lsxvideo/x-ms-asf asfvideo/x-ms-asf asrvideo/x-ms-asf asxvideo/x-msvideo avivideo/x-sgi-movie moviex-world/x-vrml flrx-world/x-vrml vrmlx-world/x-vrml wrlx-world/x-vrml wrzx-world/x-vrml xafx-world/x-vrml xof]]></content>
  </entry>
  <entry>
    <title><![CDATA[【VUE】iview的datetimerange的验证]]></title>
    <url>%2F2019%2F05%2F06%2F%EF%BC%88VUE-1%EF%BC%89iview%E7%9A%84datetimerange%E7%9A%84%E9%AA%8C%E8%AF%81%2F</url>
    <content type="text"><![CDATA[iview 的DatePicker 为 datetimerange 的验证问题12345678910&lt;FormItem label=&quot;查询时间段&quot; prop=&quot;startEndTime&quot;&gt; &lt;DatePicker type=&quot;datetimerange&quot; placement=&quot;bottom-end&quot; v-model=&quot;exportData.startEndTime&quot; placeholder=&quot;查询时间段&quot; :options=&quot;dateOptions&quot; class=&quot;item last&quot;&gt; &lt;/DatePicker&gt;&lt;/FormItem&gt; data里的数据12345678910111213141516171819202122data() &#123; return &#123; exportData: &#123; startEndTime: [], // 查询时间 &#125;, dateOptions: &#123; disabledDate (date) &#123; return date &amp;&amp; date.valueOf() &lt; Date.now() - 86400000; &#125; &#125;, startEndTime: [&#123; // 验证 required: true, type: &apos;array&apos;, message: &apos;查询时间段&apos;, trigger: &apos;change&apos;, fields: &#123; 0: &#123; type: &quot;date&quot;, required: true, message: &quot;查询时间段&quot; &#125;, 1: &#123; type: &quot;date&quot;, required: true, message: &quot;查询时间段&quot; &#125; &#125; &#125;], &#125;&#125; #]]></content>
  </entry>
  <entry>
    <title><![CDATA[起始]]></title>
    <url>%2F2019%2F05%2F02%2Fmy-first-blog%2F</url>
    <content type="text"><![CDATA[这里是我们交流的天地前端：12345678910111213141516171819HTML5+CSS3 Javascript JQuery Vue React Angular Boostrap Layui iview echarts ES6 swiper.js Typescript WebpackNPMSass Lessgulplinux微信小程序 后端：123456Node.js Java WebExpressKoaMongoDB MongooseMySQL 网站安全：12345跨站脚本攻击(XSS)跨站请求伪造攻击（CSRF)Http Heads攻击重定向攻击上传文件攻击 工具：12345678910111213前端编辑器：vscode notepad++ 微信web开发者工具后端编辑器：IntelliJ IDEA eclipse数据库：Navicat Premium Robo3T SQLyog美工:Photoshop捉包工具：Fiddler截图工具：Snipaste录屏软件：EVCapture下载工具：Internet Download Manager浏览器：chrome虚拟机：VMware Workstation Pro模拟器：夜神模拟器窗口桌面固定：DeskPins取色工具：TakeColor 谷歌浏览器插件：1234567谷歌访问助手截图：FireShot接口调试：PostmanJSON美化：JSON-handleVue调试：vue-devtools识别网站上的技术：wappalyzer夜间模式：Dark Reader 持续更新……]]></content>
      <categories>
        <category>默认分类</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>后端</tag>
        <tag>工具</tag>
      </tags>
  </entry>
</search>
